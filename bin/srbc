#!/usr/bin/env ruby
# encoding: UTF-8
require 'readline'
require 'yaml'
require 'fileutils'
require_relative '../lib/srbc'

#if x=true gem run, when x=false gem will exit


# chen how many options user specify
if ARGV.length >1
  puts 'You can run ony one executor'

#todo: ?remove into gem. run without arguments
#if user add
elsif ARGV[0] =~/add:/
  new_executor = ARGV[0].gsub( ' ','').gsub '-add:', ''
  puts "Crate #{new_executor}"
  srbc = SRBC.new(new_executor)
  puts "Please, enter extension (in format *.rb')"
  ext = $stdin.gets.chomp
  srbc.read_settings
  srbc.set_settings new_executor, ext
  srbc.run

elsif ARGV[0] =~/help/
  srbc = SRBC.new('ruby')
  srbc.srbc_command('help')

elsif ARGV[0] =~/list/
  srbc = SRBC.new('ruby')
  srbc.read_settings
  srbc.read_settings.each do |executor, extension|
    puts "\n====="
    puts "#{executor}"
    puts '-----'
    extension.each { |ext| puts "   #{ext}"}
   end

else

  ARGV.empty? ? executor = 'ruby' : executor = ARGV[0].gsub('-','')
  srbc = SRBC.new(executor)
  puts "\nSmart Ruby Console #{SrbcVersion::VERSION}. Executor: #{executor}"
  puts '__________________________'
  srbc.read_settings
  if srbc.lunched
    puts "\n print @help for help\n\n"
  end

  #it's trap for blick ctrl+c
  trap('INT') {puts "\nprint @exit"}

  srbc.run

end
